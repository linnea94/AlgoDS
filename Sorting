public class Program
	
	{
	
		// För att testa implementationen av koden. 
		// En ny array deklareras. 
		// SortMetoden kallas, 
		
		public static void Main(string[] args)
			{
				int[] integerValues = {-11, 12, -42, 0, 1, 90, 68, 6, -9};
				SelectionSort.Sort(integerValues);
				Console.WriteLine(string.Join(" | ", integerValues)); 
			}
	}


public static class SelectionSort 
{
	
	public static void Sort<T>(T[] array) where T : IComparable
	{
		for (int i = 0; i < array.Length - 1; i++)
		{
			int minIndex = i; 
			T minValue = array[i];
			for (int j = i + 1; j < array.Length; j++)
			{
				if (array[j].CompareTo(minValue) < 0)
				{
					minIndex = j; 
					minValue = array [j];
				}
					
			}
			Swap(array, i, minIndex); 
			
		}
	}
	
	private static void Swap <T>(T[] array, int first, int second) 
	{
		T temp = array[first];
		array[first] = array[second];
		array[second] = temp; 
	}
}

//Sort-metoden tar en parameter, arrayen. 
//Sedan används en for-loop för att iterera genom elementen tills bara ett element kvarstår i den osorterade arrayen. 
//Antalet iterationer är lika med längden på arrayen minus 1. 
//I varje iteration så används ytterligare en for-loop för att hitta det minsta värdet i den osorterade delen, minValue. 
//Det minsta värdet i den osorterade delen swappas då med det första elementet i den osorterade delen. 

//Alltså, själva arrayen består av en osorterad del och en sorterad del. 
